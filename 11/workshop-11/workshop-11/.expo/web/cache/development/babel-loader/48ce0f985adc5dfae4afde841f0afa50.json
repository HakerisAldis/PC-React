{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Header from \"../../components/Header\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Academy = function Academy() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newData = _useState4[0],\n      setNewData = _useState4[1];\n\n  useEffect(function () {\n    var getData = function getData() {\n      var response, json;\n      return _regeneratorRuntime.async(function getData$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(fetch('https://jsonplaceholder.typicode.com/posts'));\n\n            case 2:\n              response = _context.sent;\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              json = _context.sent;\n              setData(json);\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    getData();\n  }, []);\n\n  var renderItem = function renderItem(item) {\n    var _item$item = item.item,\n        title = _item$item.title,\n        body = _item$item.body;\n    return _jsxs(View, {\n      children: [_jsx(Text, {\n        children: title\n      }), _jsx(Text, {\n        children: body\n      })]\n    });\n  };\n\n  var searchTitle = function searchTitle(value) {\n    var newRecord = data.filter(function (item) {\n      return item.title.includes(value);\n    });\n\n    if (value === '') {\n      setNewData(data);\n    } else {\n      setNewData(newRecord);\n    }\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Header, {\n      title: \"Academy header\"\n    }), _jsx(TextInput, {\n      style: styles.input,\n      onChangeText: searchTitle,\n      placeholder: \"Filter\"\n    }), _jsx(ScrollView, {\n      children: _jsx(FlatList, {\n        data: newData || data,\n        renderItem: renderItem,\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        }\n      })\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  input: {\n    height: 50,\n    fontSize: 20,\n    padding: 15,\n    borderWidth: 1,\n    marginVertical: 5\n  }\n});\nexport default Academy;","map":{"version":3,"sources":["/Users/aldas/PC_React/11/workshop-11/workshop-11/pages/Academy/index.js"],"names":["React","useEffect","useState","SafeAreaView","Header","Academy","data","setData","newData","setNewData","getData","fetch","response","json","renderItem","item","title","body","searchTitle","value","newRecord","filter","includes","styles","container","input","id","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","fontSize","padding","borderWidth","marginVertical"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAEA,SAASC,YAAT,QAA6B,gCAA7B;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAEpB,kBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AACA,mBAA8BL,QAAQ,CAAC,IAAD,CAAtC;AAAA;AAAA,MAAOM,OAAP;AAAA,MAAgBC,UAAhB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMS,OAAO,GAAG,SAAVA,OAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CACSC,KAAK,CAAC,4CAAD,CADd;;AAAA;AACRC,cAAAA,QADQ;AAAA;AAAA,+CAEKA,QAAQ,CAACC,IAAT,EAFL;;AAAA;AAERA,cAAAA,IAFQ;AAGdN,cAAAA,OAAO,CAACM,IAAD,CAAP;;AAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAhB;;AAKAH,IAAAA,OAAO;AACR,GAPQ,EAON,EAPM,CAAT;;AASA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,qBAAwBA,IAAI,CAACA,IAA7B;AAAA,QAAQC,KAAR,cAAQA,KAAR;AAAA,QAAeC,IAAf,cAAeA,IAAf;AACA,WACE,MAAC,IAAD;AAAA,iBACE,KAAC,IAAD;AAAA,kBAAQD;AAAR,QADF,EAEE,KAAC,IAAD;AAAA,kBAAQC;AAAR,QAFF;AAAA,MADF;AAMD,GARD;;AAUA,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD,EAAW;AAC7B,QAAMC,SAAS,GAAGd,IAAI,CAACe,MAAL,CAAY,UAAAN,IAAI;AAAA,aAAIA,IAAI,CAACC,KAAL,CAAWM,QAAX,CAAoBH,KAApB,CAAJ;AAAA,KAAhB,CAAlB;;AACA,QAAIA,KAAK,KAAK,EAAd,EAAkB;AAChBV,MAAAA,UAAU,CAACH,IAAD,CAAV;AACD,KAFD,MAEO;AACLG,MAAAA,UAAU,CAACW,SAAD,CAAV;AACD;AACF,GAPD;;AASA,SACE,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEG,MAAM,CAACC,SAApB;AAAA,eACE,KAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd,MADF,EAEE,KAAC,SAAD;AAAW,MAAA,KAAK,EAAED,MAAM,CAACE,KAAzB;AAAgC,MAAA,YAAY,EAAEP,WAA9C;AAA2D,MAAA,WAAW,EAAC;AAAvE,MAFF,EAGE,KAAC,UAAD;AAAA,gBACE,KAAC,QAAD;AACI,QAAA,IAAI,EAAEV,OAAO,IAAIF,IADrB;AAEI,QAAA,UAAU,EAAEQ,UAFhB;AAGI,QAAA,YAAY,EAAE,sBAAAC,IAAI;AAAA,iBAAIA,IAAI,CAACW,EAAT;AAAA;AAHtB;AADF,MAHF;AAAA,IADF;AAaD,CA9CD;;AAgDA,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAO/BP,EAAAA,KAAK,EAAE;AACLQ,IAAAA,MAAM,EAAE,EADH;AAELC,IAAAA,QAAQ,EAAE,EAFL;AAGLC,IAAAA,OAAO,EAAE,EAHJ;AAILC,IAAAA,WAAW,EAAE,CAJR;AAKLC,IAAAA,cAAc,EAAE;AALX;AAPwB,CAAlB,CAAf;AAgBA,eAAehC,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { View, StyleSheet, TextInput, FlatList, Text, ScrollView } from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport Header from '../../components/Header';\n\nconst Academy = () => {\n\n  const [data, setData] = useState([]);\n  const [newData, setNewData] = useState(null);\n\n  useEffect(() => {\n    const getData = async () => {\n      const response = await fetch('https://jsonplaceholder.typicode.com/posts');\n      const json = await response.json();\n      setData(json);\n    }\n    getData();\n  }, []);\n\n  const renderItem = (item) => {\n    const { title, body } = item.item;\n    return (\n      <View>\n        <Text>{ title }</Text>\n        <Text>{ body }</Text>\n      </View>\n    )\n  }\n\n  const searchTitle = (value) => {\n    const newRecord = data.filter(item => item.title.includes(value));\n    if (value === '') {\n      setNewData(data);\n    } else {\n      setNewData(newRecord);\n    }\n  }\n\n  return (\n    <View style={styles.container}>\n      <Header title=\"Academy header\" />\n      <TextInput style={styles.input} onChangeText={searchTitle} placeholder='Filter'></TextInput>\n      <ScrollView>\n        <FlatList\n            data={newData || data} \n            renderItem={renderItem}\n            keyExtractor={item => item.id}\n        />\n      </ScrollView>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  input: {\n    height: 50,\n    fontSize: 20,\n    padding: 15,\n    borderWidth: 1,\n    marginVertical: 5\n  }\n});\n\nexport default Academy;\n"]},"metadata":{},"sourceType":"module"}